{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd691e7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\Administrator\\Desktop\\park-vue\\web\\src\\components\\mapmanage\\MapContainer.vue"],"sourcesContent":["<template>\r\n  <div id=\"container\"></div>\r\n</template>\r\n<script>\r\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\r\nimport { getOptions, getMarkers } from \"../../api/request.js\";\r\nexport default {\r\n  name: \"map-view\",\r\n  data() {\r\n    return {\r\n      optionsList: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initAMap();\r\n  },\r\n  unmounted() {\r\n    this.map?.destroy();\r\n  },\r\n  async created() {\r\n    if (this.$route.name !== 'schoolMap') {\r\n      this.$store.commit(\"setBreadList\", [{ title: '地图管理' }, { title: '预览' }]);\r\n    }\r\n    console.log('asd', this.$store.state.location);\r\n    await getMarkers().then((res) => {\r\n      this.markersList = res.data.data\r\n    })\r\n  },\r\n  methods: {\r\n    initAMap() {\r\n      const that = this;\r\n      AMapLoader.load({\r\n        key: \"a05ab04a5dbe61ad2fad7b664790a18f\", // 申请好的Web端开发者Key，首次调用 load 时必填\r\n        version: \"2.0\", // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\r\n        plugins: [], // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n      })\r\n        .then((AMap) => {\r\n          this.map = new AMap.Map(\"container\", {\r\n            // 设置地图容器id\r\n            viewMode: \"2D\", // 是否为3D地图模式\r\n            zoom: 14, // 初始化地图级别\r\n            center: [118.28752699999995, 35.12255099999999], // 初始化地图中心点位置\r\n          });\r\n          this.map.plugin('AMap.Geolocation', function () {\r\n            var geolocation = new AMap.Geolocation({\r\n              enableHighAccuracy: true, // 是否使用高精度定位，默认：true\r\n              timeout: 10000, // 设置定位超时时间，默认：无穷大\r\n              offset: [10, 20],  // 定位按钮的停靠位置的偏移量\r\n              zoomToAccuracy: true,  //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\r\n              position: 'RB' //  定位按钮的排放位置,  RB表示右下\r\n            })\r\n\r\n            geolocation.getCurrentPosition(function (status, result) {\r\n              if (status == 'complete') {\r\n                onComplete(result)\r\n              } else {\r\n                onError(result)\r\n              }\r\n            });\r\n\r\n            function onComplete(data) {\r\n              // data是具体的定位信息\r\n              console.log('经纬度', data.position);\r\n              that.$store.commit('updateLocation', data.position)\r\n              localStorage.setItem('myLocation', JSON.stringify(data.position))\r\n            }\r\n\r\n            function onError(data) {\r\n              // 定位出错\r\n              if (data.message.includes(\"permission denied\")) {\r\n                console.log('定位权限被拒绝，请检查浏览器设置。', data);\r\n              } else {\r\n                console.log('定位失败', data);\r\n              }\r\n            }\r\n          })\r\n          const marker = new AMap.Marker({\r\n            position: new AMap.LngLat(118.28752699999995, 35.12255099999999), //经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]\r\n            title: \"临沂大学\",\r\n          });\r\n          this.map.add(marker);\r\n          getOptions().then((res) => {\r\n            this.optionsList = res.data.data\r\n            console.log('zuobiap', this.optionsList);\r\n            let path = []\r\n            that.optionsList.map(iem => {\r\n              path.push(new AMap.LngLat(iem.lat, iem.lng))\r\n            })\r\n            var polygon = new AMap.Polygon({\r\n              path: path,\r\n              fillColor: '#fff', // 多边形填充颜色\r\n              borderWeight: 2, // 线条宽度，默认为 1\r\n              strokeColor: 'red', // 线条颜色\r\n            });\r\n\r\n            this.map.add(polygon);\r\n            console.log(this.map);\r\n          })\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n#container {\r\n  width: 100%;\r\n  height: 600px;\r\n  max-height: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAW;;uBAAnBC,mBAAA,CAA0B,OAA1BC,UAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}