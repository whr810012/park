{"ast":null,"code":"import AMapLoader from '@amap/amap-jsapi-loader';\nexport default {\n  data() {\n    return {\n      searchWords: '',\n      list: []\n    };\n  },\n  methods: {\n    fetchSuggestions(query, callback) {\n      // 清空列表\n      this.list = [];\n      window._AMapSecurityConfig = {\n        securityJsCode: \"638210509d7b98e8c4ca472ab5110203\"\n      };\n      AMapLoader.load({\n        key: 'a05ab04a5dbe61ad2fad7b664790a18f',\n        version: '2.0',\n        plugins: ['AMap.AutoComplete']\n      }).then(AMap => {\n        AMap.plugin('AMap.AutoComplete', () => {\n          const autoOptions = {\n            city: '全国' // 限定城市，默认全国\n          };\n\n          // 实例化 AutoComplete\n          const autoComplete = new AMap.AutoComplete(autoOptions);\n          // 根据关键字进行搜索\n          autoComplete.search(query, (status, result) => {\n            if (status === 'complete' && result && result.tips) {\n              // 将结果传给 callback\n              callback(result.tips.map(item => {\n                return {\n                  value: item.name,\n                  address: item.district + item.address,\n                  location: item.location\n                };\n              }));\n            } else {\n              // 如果没有找到建议，传递一个空数组\n              callback([]);\n            }\n          });\n        });\n      }).catch(error => {\n        console.error('加载 AMap 失败:', error);\n        // 发生错误时也传递空数组\n        callback([]);\n      });\n    },\n    handleSelect(item) {\n      console.log('选择的项:', item);\n    }\n  }\n};","map":{"version":3,"names":["AMapLoader","data","searchWords","list","methods","fetchSuggestions","query","callback","window","_AMapSecurityConfig","securityJsCode","load","key","version","plugins","then","AMap","plugin","autoOptions","city","autoComplete","AutoComplete","search","status","result","tips","map","item","value","name","address","district","location","catch","error","console","handleSelect","log"],"sources":["C:\\Users\\Administrator\\Desktop\\ershou\\src\\components\\mapSelect.vue"],"sourcesContent":["<template>\r\n  <el-autocomplete\r\n    class=\"inline-input\"\r\n    v-model=\"searchWords\"\r\n    :fetch-suggestions=\"fetchSuggestions\"\r\n    placeholder=\"请输入内容\"\r\n    :trigger-on-focus=\"false\"\r\n    @select=\"handleSelect\"\r\n  ></el-autocomplete>\r\n</template>\r\n\r\n<script>\r\nimport AMapLoader from '@amap/amap-jsapi-loader';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchWords: '',\r\n      list: [],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchSuggestions(query, callback) {\r\n      // 清空列表\r\n      this.list = [];\r\n\r\n      window._AMapSecurityConfig = {\r\n        securityJsCode: \"638210509d7b98e8c4ca472ab5110203\",\r\n      };\r\n\r\n      AMapLoader.load({\r\n        key: 'a05ab04a5dbe61ad2fad7b664790a18f',\r\n        version: '2.0',\r\n        plugins: ['AMap.AutoComplete'],\r\n      }).then((AMap) => {\r\n        AMap.plugin('AMap.AutoComplete', () => {\r\n          const autoOptions = {\r\n            city: '全国', // 限定城市，默认全国\r\n          };\r\n\r\n          // 实例化 AutoComplete\r\n          const autoComplete = new AMap.AutoComplete(autoOptions);\r\n          // 根据关键字进行搜索\r\n          autoComplete.search(query, (status, result) => {\r\n            if (status === 'complete' && result && result.tips) {\r\n              // 将结果传给 callback\r\n              callback(result.tips.map(item =>{\r\n                return {\r\n                  value: item.name,\r\n                  address: item.district + item.address,\r\n                  location: item.location,\r\n                };\r\n              }));\r\n            } else {\r\n              // 如果没有找到建议，传递一个空数组\r\n              callback([]);\r\n            }\r\n          });\r\n        });\r\n      }).catch(error => {\r\n        console.error('加载 AMap 失败:', error);\r\n        // 发生错误时也传递空数组\r\n        callback([]);\r\n      });\r\n    },\r\n    handleSelect(item) {\r\n      console.log('选择的项:', item);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 添加样式如果需要 */\r\n</style>"],"mappings":"AAYA,OAAOA,UAAS,MAAO,yBAAyB;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MAChC;MACA,IAAI,CAACJ,IAAG,GAAI,EAAE;MAEdK,MAAM,CAACC,mBAAkB,GAAI;QAC3BC,cAAc,EAAE;MAClB,CAAC;MAEDV,UAAU,CAACW,IAAI,CAAC;QACdC,GAAG,EAAE,kCAAkC;QACvCC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,CAAC,mBAAmB;MAC/B,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;QAChBA,IAAI,CAACC,MAAM,CAAC,mBAAmB,EAAE,MAAM;UACrC,MAAMC,WAAU,GAAI;YAClBC,IAAI,EAAE,IAAI,CAAE;UACd,CAAC;;UAED;UACA,MAAMC,YAAW,GAAI,IAAIJ,IAAI,CAACK,YAAY,CAACH,WAAW,CAAC;UACvD;UACAE,YAAY,CAACE,MAAM,CAAChB,KAAK,EAAE,CAACiB,MAAM,EAAEC,MAAM,KAAK;YAC7C,IAAID,MAAK,KAAM,UAAS,IAAKC,MAAK,IAAKA,MAAM,CAACC,IAAI,EAAE;cAClD;cACAlB,QAAQ,CAACiB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,IAAG,IAAI;gBAC9B,OAAO;kBACLC,KAAK,EAAED,IAAI,CAACE,IAAI;kBAChBC,OAAO,EAAEH,IAAI,CAACI,QAAO,GAAIJ,IAAI,CAACG,OAAO;kBACrCE,QAAQ,EAAEL,IAAI,CAACK;gBACjB,CAAC;cACH,CAAC,CAAC,CAAC;YACL,OAAO;cACL;cACAzB,QAAQ,CAAC,EAAE,CAAC;YACd;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC0B,KAAK,CAACC,KAAI,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC;QACA3B,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,CAAC;IACJ,CAAC;IACD6B,YAAYA,CAACT,IAAI,EAAE;MACjBQ,OAAO,CAACE,GAAG,CAAC,OAAO,EAAEV,IAAI,CAAC;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}