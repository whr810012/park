{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-365a4f96\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\Administrator\\Desktop\\web\\web\\src\\components\\MapContainer.vue"],"sourcesContent":["<template>\n  <div id=\"container\"></div>\n</template>\n<script>\nimport AMapLoader from \"@amap/amap-jsapi-loader\";\n\nexport default {\n  name: \"map-view\",\n  mounted() {\n    this.initAMap();\n  },\n  unmounted() {\n    this.map?.destroy();\n  },\n  created() {\n    this.$store.commit(\"setBreadList\", [{ title: '地图管理' }, { title: '预览' }]);\n    console.log(this.$store.state.location);\n  },\n  methods: {\n    initAMap() {\n      AMapLoader.load({\n        key: \"a05ab04a5dbe61ad2fad7b664790a18f\", // 申请好的Web端开发者Key，首次调用 load 时必填\n        version: \"2.0\", // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n        plugins: [], // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n      })\n        .then((AMap) => {\n          this.map = new AMap.Map(\"container\", {\n            // 设置地图容器id\n            viewMode: \"2D\", // 是否为3D地图模式\n            zoom: 14, // 初始化地图级别\n            center: [118.28752699999995, 35.12255099999999], // 初始化地图中心点位置\n          });\n          this.map.plugin('AMap.Geolocation', function () {\n            var geolocation = new AMap.Geolocation({\n              enableHighAccuracy: true, // 是否使用高精度定位，默认：true\n              timeout: 10000, // 设置定位超时时间，默认：无穷大\n              offset: [10, 20],  // 定位按钮的停靠位置的偏移量\n              zoomToAccuracy: true,  //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n              position: 'RB' //  定位按钮的排放位置,  RB表示右下\n            })\n\n            geolocation.getCurrentPosition(function (status, result) {\n              if (status == 'complete') {\n                onComplete(result)\n              } else {\n                onError(result)\n              }\n            });\n\n            function onComplete(data) {\n              // data是具体的定位信息\n              console.log('经纬度', data.position);\n              this.$store.commit('updateLocation', data.position)\n            }\n\n            function onError(data) {\n              // 定位出错\n              if (data.message.includes(\"permission denied\")) {\n                console.log('定位权限被拒绝，请检查浏览器设置。', data);\n              } else {\n                console.log('定位失败', data);\n              }\n            }\n          })\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n#container {\n  width: 100%;\n  height: 600px;\n  max-height: 100%;\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAW;;uBAAnBC,mBAAA,CAA0B,OAA1BC,UAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}