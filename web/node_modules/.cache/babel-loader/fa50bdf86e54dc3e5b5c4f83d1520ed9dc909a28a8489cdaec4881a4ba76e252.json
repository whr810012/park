{"ast":null,"code":"import { getAllArea, getAllOrder, getAllUser, getComment } from '@/api/request';\nexport default {\n  name: 'evaluateManage',\n  data() {\n    return {\n      commentList: [],\n      userList: [],\n      orderList: [],\n      areaList: [],\n      radio: '全部'\n    };\n  },\n  computed: {\n    commentListFilter() {\n      return this.commentList.filter(item => {\n        if (this.radio === '全部') {\n          return true;\n        } else {\n          return item.areaName === this.radio;\n        }\n      });\n    }\n  },\n  methods: {\n    init() {\n      getComment().then(res => {\n        this.commentList = res.data.data;\n      });\n      getAllUser().then(res => {\n        this.userList = res.data.data;\n      });\n      getAllOrder().then(res => {\n        this.orderList = res.data.data;\n      });\n      getAllArea().then(res => {\n        this.areaList = res.data.data;\n      });\n      this.userList.map(item => {\n        this.commentList.map(item1 => {\n          if (item.openid === item1.userId) {\n            item1.userName = item.userName;\n          }\n        });\n      });\n    }\n  },\n  created() {\n    this.init();\n  }\n};","map":{"version":3,"names":["getAllArea","getAllOrder","getAllUser","getComment","name","data","commentList","userList","orderList","areaList","radio","computed","commentListFilter","filter","item","areaName","methods","init","then","res","map","item1","openid","userId","userName","created"],"sources":["D:\\CODE\\park\\park-vue\\web\\src\\pages\\home\\evaluateManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"evaluateManage\">\r\n    <!-- <el-radio-group v-model=\"radio\">\r\n      <el-radio-button label=\"全部\"></el-radio-button>\r\n      <el-radio-button v-for=\"item in areaList\" :key=\"item.areaid\" :label=\"item.areaName\"></el-radio-button>\r\n    </el-radio-group> -->\r\n    <div class=\"content\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\" v-for=\"item in commentListFilter\" :key=\"item.evaluateId\">\r\n          <el-card class=\"box-card\" shadow=\"hover\">\r\n            <el-popover\r\n              placement=\"top-start\"\r\n              trigger=\"hover\"\r\n              :content=\"item.body\">\r\n              <template #reference>\r\n                <div>内容：\r\n                  <span class=\"body-centet\">\r\n                    {{item.body}}\r\n                  </span>\r\n                </div>\r\n              </template>\r\n            </el-popover>\r\n            <div>评分：{{item.score}}</div>\r\n            <div>时间：{{item.createTime}}</div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAllArea, getAllOrder, getAllUser, getComment } from '@/api/request'\r\nexport default {\r\n  name: 'evaluateManage',\r\n  data () {\r\n    return {\r\n      commentList:[],\r\n      userList:[],\r\n      orderList:[],\r\n      areaList:[],\r\n      radio: '全部'\r\n    }\r\n  },\r\n  computed: {\r\n    commentListFilter () {\r\n      return this.commentList.filter(item => {\r\n        if (this.radio === '全部') {\r\n          return true\r\n        } else {\r\n          return item.areaName === this.radio\r\n        }\r\n      })\r\n    }  \r\n  },\r\n  methods: {\r\n    init () {\r\n      getComment().then(res => {\r\n        this.commentList = res.data.data\r\n      })\r\n      getAllUser().then(res => {\r\n        this.userList = res.data.data\r\n      })\r\n      getAllOrder().then(res => {\r\n        this.orderList = res.data.data\r\n      })\r\n      getAllArea().then(res => {\r\n        this.areaList = res.data.data\r\n      })\r\n      this.userList.map(item => {\r\n        this.commentList.map(item1 => {\r\n          if (item.openid === item1.userId) {\r\n            item1.userName = item.userName\r\n          }\r\n        })\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    this.init()\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.evaluateManage{\r\n  padding:20px\r\n}\r\n.content {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  .body-centet {\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 3;\r\n    overflow: hidden;\r\n  }\r\n}\r\n</style>"],"mappings":"AAgCA,SAASA,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,UAAS,QAAS,eAAc;AAC9E,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,WAAW,EAAC,EAAE;MACdC,QAAQ,EAAC,EAAE;MACXC,SAAS,EAAC,EAAE;MACZC,QAAQ,EAAC,EAAE;MACXC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAgBA,CAAA,EAAK;MACnB,OAAO,IAAI,CAACN,WAAW,CAACO,MAAM,CAACC,IAAG,IAAK;QACrC,IAAI,IAAI,CAACJ,KAAI,KAAM,IAAI,EAAE;UACvB,OAAO,IAAG;QACZ,OAAO;UACL,OAAOI,IAAI,CAACC,QAAO,KAAM,IAAI,CAACL,KAAI;QACpC;MACF,CAAC;IACH;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,IAAGA,CAAA,EAAK;MACNd,UAAU,CAAC,CAAC,CAACe,IAAI,CAACC,GAAE,IAAK;QACvB,IAAI,CAACb,WAAU,GAAIa,GAAG,CAACd,IAAI,CAACA,IAAG;MACjC,CAAC;MACDH,UAAU,CAAC,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;QACvB,IAAI,CAACZ,QAAO,GAAIY,GAAG,CAACd,IAAI,CAACA,IAAG;MAC9B,CAAC;MACDJ,WAAW,CAAC,CAAC,CAACiB,IAAI,CAACC,GAAE,IAAK;QACxB,IAAI,CAACX,SAAQ,GAAIW,GAAG,CAACd,IAAI,CAACA,IAAG;MAC/B,CAAC;MACDL,UAAU,CAAC,CAAC,CAACkB,IAAI,CAACC,GAAE,IAAK;QACvB,IAAI,CAACV,QAAO,GAAIU,GAAG,CAACd,IAAI,CAACA,IAAG;MAC9B,CAAC;MACD,IAAI,CAACE,QAAQ,CAACa,GAAG,CAACN,IAAG,IAAK;QACxB,IAAI,CAACR,WAAW,CAACc,GAAG,CAACC,KAAI,IAAK;UAC5B,IAAIP,IAAI,CAACQ,MAAK,KAAMD,KAAK,CAACE,MAAM,EAAE;YAChCF,KAAK,CAACG,QAAO,GAAIV,IAAI,CAACU,QAAO;UAC/B;QACF,CAAC;MACH,CAAC;IACH;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACR,IAAI,CAAC;EACZ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}